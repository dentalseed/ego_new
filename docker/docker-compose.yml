# 파일 규격 버전
version: "3.1"

# 실행하려는 컨테이너들 정의
services:
  # 서비스명
  redis:
    # 사용할 이미지
    image: redis:7.2.4-alpine
    # 컨테이너명
    container_name: session-redis
    # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
    ports:
      - '16379:6379'
    # 스토리지 마운트(볼륨) 설정
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    # 컨테이너에 docker label을 이용해서 메타데이터 추가
    labels:
      - "name=redis"
      - "mode=standalone"
    # 컨테이너 종료시 재시작 여부 설정
    restart: unless-stopped
    command: redis-server /usr/local/conf/redis.conf
    networks:
      - network
  nginx:
    container_name: nginx
    image: nginx:1.21.5-alpine
    ports:
      - "7948:80/tcp"
    volumes:
      #docker-compose.yml과 같은 레벨에 둔 nginx.conf를 mount.
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped
    networks:
      - network
    depends_on:
      - web01
      - web02
  web01:
    container_name: patient-care-web01
    hostname: patient-care-web
    ports:
      - "9001:8080"
    env_file:
      - ./denb-web/config/.env.dev
    build:
      context: ./denb-web/
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - network
    depends_on:
      - redis
  web02:
    container_name: patient-care-web02
    hostname: patient-care-web
    ports:
      - "9002:8080"
    env_file:
      - ./denb-web/config/.env.dev
    build:
      context: ./denb-web/
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - network
    depends_on:
      - redis

networks: # 가장 기본적인 bridge 네트워크
  network:
    driver: bridge